// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_CLIENTTOSERVERPID_FB_SERVER_H_
#define FLATBUFFERS_GENERATED_CLIENTTOSERVERPID_FB_SERVER_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 23 &&
              FLATBUFFERS_VERSION_MINOR == 5 &&
              FLATBUFFERS_VERSION_REVISION == 26,
             "Non-compatible flatbuffers version included");

namespace fb {
namespace server {

enum SendPid : uint32_t {
  SendPid_None = 0,
  SendPid_LoginAccount = 1,
  SendPid_Chatting = 2,
  SendPid_LoginAuth = 3,
  SendPid_LoginSecurity = 4,
  ////////// character //////////
  SendPid_CharacterCreate = 5,
  SendPid_CharacterDelete = 6,
  SendPid_CharacterSelect = 7,
  SendPid_CharacterLogout = 8,
  SendPid_CharacterMove = 9,
  SendPid_CharacterAngle = 10,
  SendPid_CharacterResurrection = 11,
  ////////// actor //////////
  SendPid_ActorInteractionStart = 12,
  SendPid_ActorInteractionEnd = 13,
  SendPid_ActorInteractionCancel = 14,
  ////////// item //////////
  SendPid_ItemDestroy = 15,
  SendPid_ItemUse = 16,
  SendPid_ItemMake = 17,
  SendPid_ItemReinforce = 18,
  SendPid_ItemEnchant = 19,
  SendPid_ItemDisassemble = 20,
  SendPid_ItemRepair = 21,
  SendPid_ItemSkinChange = 22,
  ////////// skill //////////
  SendPid_SkillSpellStart = 23,
  SendPid_SkillSpellEnd = 24,
  SendPid_SkillLearn = 25,
  SendPid_SkillCasting = 26,
  SendPid_SkillCancel = 27,
  ////////// shop //////////
  SendPid_ShopBuy = 28,
  SendPid_ShopSell = 29,
  ////////// quest //////////
  SendPid_QuestAccept = 30,
  SendPid_QuestCancel = 31,
  SendPid_QuestReward = 32,
  ////////// premium //////////
  SendPid_PremiumBuy = 33,
  SendPid_PremiumRefund = 34,
  SendPid_PremiumConfirm = 35,
  ////////// party //////////
  SendPid_PartyCreate = 36,
  SendPid_PartyJoin = 37,
  SendPid_PartyLeave = 38,
  SendPid_PartyInvite = 39,
  SendPid_PartyInviteAnswer = 40,
  SendPid_PartyDeport = 41,
  SendPid_PartyUpdate = 42,
  ////////// guild //////////
  SendPid_GuildCreate = 43,
  SendPid_GuildLeave = 44,
  SendPid_GuildDeport = 45,
  SendPid_GuildOptionChange = 46,
  SendPid_GuildMemberInvite = 47,
  SendPid_GuildMemberInviteAnswer = 48,
  SendPid_GuildMemberChangeGrade = 49,
  ////////// friend //////////
  SendPid_FriendAdd = 50,
  SendPid_FriendAccept = 51,
  SendPid_FriendRemove = 52,
  ////////// instance //////////
  SendPid_InstanceEnter = 53,
  SendPid_InstanceLeave = 54,
  SendPid_InstanceSkip = 55,
  SendPid_MIN = SendPid_None,
  SendPid_MAX = SendPid_InstanceSkip
};

inline const SendPid (&EnumValuesSendPid())[56] {
  static const SendPid values[] = {
    SendPid_None,
    SendPid_LoginAccount,
    SendPid_Chatting,
    SendPid_LoginAuth,
    SendPid_LoginSecurity,
    SendPid_CharacterCreate,
    SendPid_CharacterDelete,
    SendPid_CharacterSelect,
    SendPid_CharacterLogout,
    SendPid_CharacterMove,
    SendPid_CharacterAngle,
    SendPid_CharacterResurrection,
    SendPid_ActorInteractionStart,
    SendPid_ActorInteractionEnd,
    SendPid_ActorInteractionCancel,
    SendPid_ItemDestroy,
    SendPid_ItemUse,
    SendPid_ItemMake,
    SendPid_ItemReinforce,
    SendPid_ItemEnchant,
    SendPid_ItemDisassemble,
    SendPid_ItemRepair,
    SendPid_ItemSkinChange,
    SendPid_SkillSpellStart,
    SendPid_SkillSpellEnd,
    SendPid_SkillLearn,
    SendPid_SkillCasting,
    SendPid_SkillCancel,
    SendPid_ShopBuy,
    SendPid_ShopSell,
    SendPid_QuestAccept,
    SendPid_QuestCancel,
    SendPid_QuestReward,
    SendPid_PremiumBuy,
    SendPid_PremiumRefund,
    SendPid_PremiumConfirm,
    SendPid_PartyCreate,
    SendPid_PartyJoin,
    SendPid_PartyLeave,
    SendPid_PartyInvite,
    SendPid_PartyInviteAnswer,
    SendPid_PartyDeport,
    SendPid_PartyUpdate,
    SendPid_GuildCreate,
    SendPid_GuildLeave,
    SendPid_GuildDeport,
    SendPid_GuildOptionChange,
    SendPid_GuildMemberInvite,
    SendPid_GuildMemberInviteAnswer,
    SendPid_GuildMemberChangeGrade,
    SendPid_FriendAdd,
    SendPid_FriendAccept,
    SendPid_FriendRemove,
    SendPid_InstanceEnter,
    SendPid_InstanceLeave,
    SendPid_InstanceSkip
  };
  return values;
}

inline const char * const *EnumNamesSendPid() {
  static const char * const names[57] = {
    "None",
    "LoginAccount",
    "Chatting",
    "LoginAuth",
    "LoginSecurity",
    "CharacterCreate",
    "CharacterDelete",
    "CharacterSelect",
    "CharacterLogout",
    "CharacterMove",
    "CharacterAngle",
    "CharacterResurrection",
    "ActorInteractionStart",
    "ActorInteractionEnd",
    "ActorInteractionCancel",
    "ItemDestroy",
    "ItemUse",
    "ItemMake",
    "ItemReinforce",
    "ItemEnchant",
    "ItemDisassemble",
    "ItemRepair",
    "ItemSkinChange",
    "SkillSpellStart",
    "SkillSpellEnd",
    "SkillLearn",
    "SkillCasting",
    "SkillCancel",
    "ShopBuy",
    "ShopSell",
    "QuestAccept",
    "QuestCancel",
    "QuestReward",
    "PremiumBuy",
    "PremiumRefund",
    "PremiumConfirm",
    "PartyCreate",
    "PartyJoin",
    "PartyLeave",
    "PartyInvite",
    "PartyInviteAnswer",
    "PartyDeport",
    "PartyUpdate",
    "GuildCreate",
    "GuildLeave",
    "GuildDeport",
    "GuildOptionChange",
    "GuildMemberInvite",
    "GuildMemberInviteAnswer",
    "GuildMemberChangeGrade",
    "FriendAdd",
    "FriendAccept",
    "FriendRemove",
    "InstanceEnter",
    "InstanceLeave",
    "InstanceSkip",
    nullptr
  };
  return names;
}

inline const char *EnumNameSendPid(SendPid e) {
  if (::flatbuffers::IsOutRange(e, SendPid_None, SendPid_InstanceSkip)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesSendPid()[index];
}

enum RecvPid : uint32_t {
  RecvPid_None = 0,
  RecvPid_LoginAccount = 1,
  RecvPid_LoginAuth = 2,
  RecvPid_LoginSecurity = 3,
  ////////// character //////////
  RecvPid_CharacterCreate = 4,
  RecvPid_CharacterDelete = 5,
  RecvPid_CharacterSelect = 6,
  RecvPid_CharacterLogout = 7,
  RecvPid_CharacterMove = 8,
  RecvPid_CharacterAngle = 9,
  RecvPid_CharacterResurrection = 10,
  RecvPid_CharacterHpMp = 11,
  ////////// actor //////////
  RecvPid_ActorInteractionStart = 12,
  RecvPid_ActorInteractionEnd = 13,
  RecvPid_ActorInteractionCancel = 14,
  RecvPid_ActorAppear = 15,
  RecvPid_ActorDisappear = 16,
  RecvPid_ActorMove = 17,
  RecvPid_ActorChange = 18,
  ////////// item //////////
  RecvPid_ItemCreate = 19,
  RecvPid_ItemDestroy = 20,
  RecvPid_ItemUse = 21,
  RecvPid_ItemMake = 22,
  RecvPid_ItemReinforce = 23,
  RecvPid_ItemEnchant = 24,
  RecvPid_ItemDisassemble = 25,
  RecvPid_ItemRepair = 26,
  RecvPid_ItemSkinChange = 27,
  ////////// skill //////////
  RecvPid_SkillSpellStart = 28,
  RecvPid_SkillSpellEnd = 29,
  RecvPid_SkillLearn = 30,
  RecvPid_SkillCasting = 31,
  RecvPid_SkillCancel = 32,
  ////////// shop //////////
  RecvPid_ShopBuy = 33,
  RecvPid_ShopSell = 34,
  ////////// quest //////////
  RecvPid_QuestAccept = 35,
  RecvPid_QuestCancel = 36,
  RecvPid_QuestReward = 37,
  ////////// premium //////////
  RecvPid_PremiumBuy = 38,
  RecvPid_PremiumRefund = 39,
  RecvPid_PremiumConfirm = 40,
  ////////// party //////////
  RecvPid_PartyCreate = 41,
  RecvPid_PartyJoin = 42,
  RecvPid_PartyLeave = 43,
  RecvPid_PartyInvite = 44,
  RecvPid_PartyInviteAnswer = 45,
  RecvPid_PartyDeport = 46,
  RecvPid_PartyUpdate = 47,
  ////////// guild //////////
  RecvPid_GuildCreate = 48,
  RecvPid_GuildLeave = 49,
  RecvPid_GuildDeport = 50,
  RecvPid_GuildOptionChange = 51,
  RecvPid_GuildMemberInvite = 52,
  RecvPid_GuildMemberInviteAnswer = 53,
  RecvPid_GuildMemberChangeGrade = 54,
  ////////// friend //////////
  RecvPid_FriendAdd = 55,
  RecvPid_FriendAccept = 56,
  RecvPid_FriendRemove = 57,
  ////////// instance //////////
  RecvPid_InstanceEnter = 58,
  RecvPid_InstanceLeave = 59,
  RecvPid_InstanceSkip = 60,
  RecvPid_MIN = RecvPid_None,
  RecvPid_MAX = RecvPid_InstanceSkip
};

inline const RecvPid (&EnumValuesRecvPid())[61] {
  static const RecvPid values[] = {
    RecvPid_None,
    RecvPid_LoginAccount,
    RecvPid_LoginAuth,
    RecvPid_LoginSecurity,
    RecvPid_CharacterCreate,
    RecvPid_CharacterDelete,
    RecvPid_CharacterSelect,
    RecvPid_CharacterLogout,
    RecvPid_CharacterMove,
    RecvPid_CharacterAngle,
    RecvPid_CharacterResurrection,
    RecvPid_CharacterHpMp,
    RecvPid_ActorInteractionStart,
    RecvPid_ActorInteractionEnd,
    RecvPid_ActorInteractionCancel,
    RecvPid_ActorAppear,
    RecvPid_ActorDisappear,
    RecvPid_ActorMove,
    RecvPid_ActorChange,
    RecvPid_ItemCreate,
    RecvPid_ItemDestroy,
    RecvPid_ItemUse,
    RecvPid_ItemMake,
    RecvPid_ItemReinforce,
    RecvPid_ItemEnchant,
    RecvPid_ItemDisassemble,
    RecvPid_ItemRepair,
    RecvPid_ItemSkinChange,
    RecvPid_SkillSpellStart,
    RecvPid_SkillSpellEnd,
    RecvPid_SkillLearn,
    RecvPid_SkillCasting,
    RecvPid_SkillCancel,
    RecvPid_ShopBuy,
    RecvPid_ShopSell,
    RecvPid_QuestAccept,
    RecvPid_QuestCancel,
    RecvPid_QuestReward,
    RecvPid_PremiumBuy,
    RecvPid_PremiumRefund,
    RecvPid_PremiumConfirm,
    RecvPid_PartyCreate,
    RecvPid_PartyJoin,
    RecvPid_PartyLeave,
    RecvPid_PartyInvite,
    RecvPid_PartyInviteAnswer,
    RecvPid_PartyDeport,
    RecvPid_PartyUpdate,
    RecvPid_GuildCreate,
    RecvPid_GuildLeave,
    RecvPid_GuildDeport,
    RecvPid_GuildOptionChange,
    RecvPid_GuildMemberInvite,
    RecvPid_GuildMemberInviteAnswer,
    RecvPid_GuildMemberChangeGrade,
    RecvPid_FriendAdd,
    RecvPid_FriendAccept,
    RecvPid_FriendRemove,
    RecvPid_InstanceEnter,
    RecvPid_InstanceLeave,
    RecvPid_InstanceSkip
  };
  return values;
}

inline const char * const *EnumNamesRecvPid() {
  static const char * const names[62] = {
    "None",
    "LoginAccount",
    "LoginAuth",
    "LoginSecurity",
    "CharacterCreate",
    "CharacterDelete",
    "CharacterSelect",
    "CharacterLogout",
    "CharacterMove",
    "CharacterAngle",
    "CharacterResurrection",
    "CharacterHpMp",
    "ActorInteractionStart",
    "ActorInteractionEnd",
    "ActorInteractionCancel",
    "ActorAppear",
    "ActorDisappear",
    "ActorMove",
    "ActorChange",
    "ItemCreate",
    "ItemDestroy",
    "ItemUse",
    "ItemMake",
    "ItemReinforce",
    "ItemEnchant",
    "ItemDisassemble",
    "ItemRepair",
    "ItemSkinChange",
    "SkillSpellStart",
    "SkillSpellEnd",
    "SkillLearn",
    "SkillCasting",
    "SkillCancel",
    "ShopBuy",
    "ShopSell",
    "QuestAccept",
    "QuestCancel",
    "QuestReward",
    "PremiumBuy",
    "PremiumRefund",
    "PremiumConfirm",
    "PartyCreate",
    "PartyJoin",
    "PartyLeave",
    "PartyInvite",
    "PartyInviteAnswer",
    "PartyDeport",
    "PartyUpdate",
    "GuildCreate",
    "GuildLeave",
    "GuildDeport",
    "GuildOptionChange",
    "GuildMemberInvite",
    "GuildMemberInviteAnswer",
    "GuildMemberChangeGrade",
    "FriendAdd",
    "FriendAccept",
    "FriendRemove",
    "InstanceEnter",
    "InstanceLeave",
    "InstanceSkip",
    nullptr
  };
  return names;
}

inline const char *EnumNameRecvPid(RecvPid e) {
  if (::flatbuffers::IsOutRange(e, RecvPid_None, RecvPid_InstanceSkip)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNamesRecvPid()[index];
}

}  // namespace server
}  // namespace fb

#endif  // FLATBUFFERS_GENERATED_CLIENTTOSERVERPID_FB_SERVER_H_
