// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_RESULTTYPE_FB_H_
#define FLATBUFFERS_GENERATED_RESULTTYPE_FB_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 23 &&
              FLATBUFFERS_VERSION_MINOR == 1 &&
              FLATBUFFERS_VERSION_REVISION == 21,
             "Non-compatible flatbuffers version included");

namespace fb {

enum eResult : int32_t {
  eResult_Success = 0,
  eResult_Fail = 1,
  eResult_BufferLackSpace = 2,
  eResult_BufferFailWrite = 3,
  eResult_BufferFailRead = 4,
  eResult_InvalidParameter = 5,
  eResult_InvalidIndex = 6,
  eResult_NotFoundServer = 7,
  eResult_ItemNotFound = 8,
  eResult_ItemStackFull = 9,
  eResult_ItemNotEnough = 10,
  eResult_ItemUidDuplicate = 11,
  eResult_ItemIdxDuplicate = 12,
  eResult_InvenFull = 13,
  eResult_MIN = eResult_Success,
  eResult_MAX = eResult_InvenFull
};

inline const eResult (&EnumValueseResult())[14] {
  static const eResult values[] = {
    eResult_Success,
    eResult_Fail,
    eResult_BufferLackSpace,
    eResult_BufferFailWrite,
    eResult_BufferFailRead,
    eResult_InvalidParameter,
    eResult_InvalidIndex,
    eResult_NotFoundServer,
    eResult_ItemNotFound,
    eResult_ItemStackFull,
    eResult_ItemNotEnough,
    eResult_ItemUidDuplicate,
    eResult_ItemIdxDuplicate,
    eResult_InvenFull
  };
  return values;
}

inline const char * const *EnumNameseResult() {
  static const char * const names[15] = {
    "Success",
    "Fail",
    "BufferLackSpace",
    "BufferFailWrite",
    "BufferFailRead",
    "InvalidParameter",
    "InvalidIndex",
    "NotFoundServer",
    "ItemNotFound",
    "ItemStackFull",
    "ItemNotEnough",
    "ItemUidDuplicate",
    "ItemIdxDuplicate",
    "InvenFull",
    nullptr
  };
  return names;
}

inline const char *EnumNameeResult(eResult e) {
  if (::flatbuffers::IsOutRange(e, eResult_Success, eResult_InvenFull)) return "";
  const size_t index = static_cast<size_t>(e);
  return EnumNameseResult()[index];
}

}  // namespace fb

#endif  // FLATBUFFERS_GENERATED_RESULTTYPE_FB_H_
